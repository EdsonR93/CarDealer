CREATE TABLE public.users
(
    user_id integer NOT NULL DEFAULT nextval('users_user_id_seq'::regclass),
    is_employee boolean DEFAULT false,
    username text COLLATE pg_catalog."default" NOT NULL,
    password text COLLATE pg_catalog."default" NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    lastname text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (user_id)
);

CREATE TABLE public.cars
(
    serial_num integer NOT NULL,
    color text COLLATE pg_catalog."default" NOT NULL,
    miles integer NOT NULL,
    model integer NOT NULL,
    brand text COLLATE pg_catalog."default" NOT NULL,
    price double precision NOT NULL,
    owner_id integer NOT NULL DEFAULT 0,
    make text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT cars_pkey PRIMARY KEY (serial_num),
    CONSTRAINT cars_owner_id_fkey FOREIGN KEY (owner_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE TABLE public.offers
(
    offer_id integer NOT NULL DEFAULT nextval('offers_offer_id_seq'::regclass),
    car_serial_num integer NOT NULL,
    user_id integer NOT NULL,
    offer double precision NOT NULL,
    accepted boolean DEFAULT false,
    pending boolean NOT NULL DEFAULT true,
    months integer NOT NULL DEFAULT 36,
    CONSTRAINT offers_pkey PRIMARY KEY (offer_id),
    CONSTRAINT offers_car_id_fkey FOREIGN KEY (car_serial_num)
        REFERENCES public.cars (serial_num) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT offers_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE TABLE public.payment_plan
(
    plan_id integer NOT NULL DEFAULT nextval('payment_plan_plan_id_seq'::regclass),
    user_id integer NOT NULL,
    car_serial_num integer NOT NULL,
    monthly_payment double precision NOT NULL,
    total_months integer NOT NULL,
    months_left integer NOT NULL,
    purchase_date date NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT payment_plan_pkey PRIMARY KEY (plan_id),
    CONSTRAINT payment_plan_car_serial_num_fkey FOREIGN KEY (car_serial_num)
        REFERENCES public.cars (serial_num) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT payment_plan_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);
CREATE TABLE public.payments
(
    payment_id integer NOT NULL DEFAULT nextval('payments_payment_id_seq'::regclass),
    user_id integer NOT NULL,
    car_serial_num integer NOT NULL,
    payment_amount double precision NOT NULL,
    payment_date date NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT payments_pkey PRIMARY KEY (payment_id),
    CONSTRAINT payments_car_id_fkey FOREIGN KEY (car_serial_num)
        REFERENCES public.cars (serial_num) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT payments_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);